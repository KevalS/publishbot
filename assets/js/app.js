// Generated by CoffeeScript 1.11.1
angular.module('application', ['ngRoute', 'restangular']).config(function($routeProvider, RestangularProvider) {
  $routeProvider.when("/", {
    templateUrl: "./assets/templates/landing.html",
    controller: "displayController"
  }).when("/new", {
    templateUrl: "./assets/templates/new.html"
  }).when("/editor/:basename", {
    templateUrl: "./assets/templates/editor.html",
    controller: "editorController"
  });
  RestangularProvider.setBaseUrl("https://api.github.com/");
}).factory('tokenFactory', function($window, $rootScope) {
  return {
    saveProfile: function(url, token) {
      $window.localStorage.setItem('token', token);
      $window.localStorage.setItem('url', url);
      return $rootScope.$broadcast('tokenEvent');
    },
    clearProfile: function() {
      $window.localStorage.setItem('token', false);
      $window.localStorage.setItem('url', false);
      return $rootScope.$broadcast('tokenEvent');
    }
  };
}).factory('utilsFactory', function() {
  return {
    getUsername: function(url) {
      return url.split('.')[0];
    },
    getPostTitle: function(gitTitle) {
      var temp;
      temp = gitTitle.split('-').slice(3).join(" ");
      return temp.split('.')[0];
    },
    generatePostTitle: function(title) {
      var date, dd, mm, title_part, today, yy;
      today = new Date();
      dd = today.getDate();
      mm = today.getMonth() + 1;
      yy = today.getFullYear();
      if (dd < 10) {
        dd = '0' + dd;
      }
      if (mm < 10) {
        mm = '0' + mm;
      }
      date = yy + '-' + mm + '-' + dd + '-';
      title_part = title.split(" ").join("-").concat(".md");
      return date.concat(title_part);
    },
    encode: function(title) {
      return btoa(title);
    },
    decode: function(blob) {
      return atob(blob);
    },
    getPostContentFromBlob: function(blob) {
      var vsplitData;
      vsplitData = blob.split("---").slice(2).join("---").split("\n");
      vsplitData = vsplitData.splice(1);
      return vsplitData.join("\n");
    },
    generateBlob: function(blob, blogContent) {
      return "---".concat(blob.split("---")[1]).concat("---\n").concat(blogContent);
    },
    publishBlob: function(blog) {
      var explodeContent, headerTest, i, j, len, ref;
      explodeContent = blog.split("\n");
      len = explodeContent.length;
      for (i = j = 0, ref = len - 1; j < ref; i = j += 1) {
        headerTest = explodeContent[i].split(":");
        if (headerTest.length === 2 && headerTest[0] === "published") {
          headerTest[1] = "true";
          explodeContent[i] = headerTest.join(": ");
        }
      }
      return explodeContent.join("\n");
    }
  };
}).controller('tokenController', function($scope, tokenFactory) {
  $scope.tokenMsg = 0;
  return $scope.newToken = function() {
    if (!$scope.token || !$scope.url) {
      $scope.tokenMsg = "Please fill in complete details on form";
    }
    return tokenFactory.saveProfile($scope.url, $scope.token);
  };
}).controller('navController', function($scope, $rootScope, $window, tokenFactory) {
  $scope.authenticated = $window.localStorage.getItem('token');
  console.log("URL : " + $window.localStorage.getItem('url'));
  console.log("TOKEN : " + $window.localStorage.getItem('token'));
  $scope.logout = function() {
    return tokenFactory.clearProfile();
  };
  return $rootScope.$on("tokenEvent", function() {
    return $scope.authenticated = $window.localStorage.getItem('token');
  });
}).controller('displayController', function($scope, $window, $rootScope, Restangular) {
  var e;
  try {
    if ($window.localStorage.getItem("token").length > 0) {
      console.log("Token definition found");
    }
  } catch (error) {
    e = error;
    $window.localStorage.setItem("token", false);
  }
  $scope.authenticated = $window.localStorage.getItem('token');
  return $rootScope.$on("tokenEvent", function() {
    return $scope.authenticated = $window.localStorage.getItem('token');
  });
}).controller('dashboardController', function($scope, $window, Restangular, utilsFactory) {
  $scope.utils = utilsFactory;
  $scope.url = $window.localStorage.getItem('url');
  $scope.token = $window.localStorage.getItem('token');
  $scope.username = utilsFactory.getUsername($window.localStorage.getItem('url'));
  $scope.loading = '1';
  return Restangular.setDefaultHeaders({
    'Authorization': 'Basic ' + $scope.token
  }).one('/repos/' + $scope.username + '/' + $scope.url + '/contents/_posts').get().then(function(response) {
    $scope.loading = '0';
    return $scope.posts = response;
  });
}).controller('newController', function($scope, $window, $location, Restangular, utilsFactory) {
  $scope.url = $window.localStorage.getItem('url');
  $scope.token = $window.localStorage.getItem('token');
  $scope.username = utilsFactory.getUsername($window.localStorage.getItem('url'));
  $scope.initialCommitPre = "---\npublished: false\ntitle: ";
  $scope.initialCommitPost = "\nlayout: post\n---\n";
  return $scope.createNew = function() {
    var instance;
    $scope.postFileName = utilsFactory.generatePostTitle($scope.postTitle);
    instance = Restangular.setDefaultHeaders({
      'Authorization': 'Basic ' + $scope.token
    }).one('/repos/' + $scope.username + '/' + $scope.url + '/contents/_posts/' + $scope.postFileName);
    instance.message = "CREATED : " + $scope.postTitle;
    instance.content = utilsFactory.encode($scope.initialCommitPre + $scope.postTitle + $scope.initialCommitPost);
    return instance.put().then(function(response) {
      var encodedFileName;
      encodedFileName = utilsFactory.encode($scope.postFileName);
      return $location.path('/editor/' + encodedFileName);
    }, function(response) {
      return alert("Error while creating file");
    });
  };
}).controller('editorController', function($scope, $window, $route, $routeParams, utilsFactory, Restangular, $sce, $location) {
  var instance;
  $scope.utils = utilsFactory;
  $scope.url = $window.localStorage.getItem('url');
  $scope.token = $window.localStorage.getItem('token');
  $scope.username = utilsFactory.getUsername($window.localStorage.getItem('url'));
  $scope.fileName = utilsFactory.decode($routeParams.basename);
  $scope.ctrlDown = false;
  $scope.ctrlKey = 17;
  $scope.message = 0;
  $scope.keyDownFunc = function($event) {
    if ($scope.ctrlDown && String.fromCharCode($event.which).toLowerCase() === 'c') {
      return alert("Saving the document now");
    }
  };
  angular.element($window).bind("keyup", function($event) {
    if ($event.keyCode === $scope.ctrlKey) {
      $scope.ctrlDown = false;
    }
    return $scope.$apply();
  });
  angular.element($window).bind("keydown", function($event) {
    if ($event.keyCode === $scope.ctrlKey) {
      $scope.ctrlDown = true;
    }
    return $scope.$apply();
  });
  instance = Restangular.setDefaultHeaders({
    'Authorization': 'Basic ' + $scope.token
  }).one('/repos/' + $scope.username + '/' + $scope.url + '/contents/_posts/' + $scope.fileName).get().then(function(response) {
    $scope.postResource = response;
    $scope.editorContent = utilsFactory.getPostContentFromBlob(utilsFactory.decode(response.content));
    return $scope.renderHtml();
  }, function(response) {
    return alert(response);
  });
  $scope.updatePost = function() {
    var newContent;
    newContent = utilsFactory.generateBlob(utilsFactory.decode($scope.postResource.content), $scope.editorContent);
    $scope.postResource.message = "Update : " + utilsFactory.getPostTitle($scope.fileName);
    $scope.postResource.content = utilsFactory.encode(newContent);
    $scope.postResource.put();
    return $scope.message = "Post saved in drafts";
  };
  $scope.publishPost = function() {
    var newContent, publishedContent;
    newContent = utilsFactory.generateBlob(utilsFactory.decode($scope.postResource.content), $scope.editorContent);
    publishedContent = utilsFactory.publishBlob(newContent);
    $scope.postResource.message = "Publish : " + utilsFactory.getPostTitle($scope.fileName);
    $scope.postResource.content = utilsFactory.encode(publishedContent);
    $scope.postResource.put();
    return $scope.message = "Post published on blog";
  };
  $scope.deletePost = function() {
    console.log("Removing the post");
    $scope.postResource.message = "Delete : " + utilsFactory.getPostTitle($scope.fileName);
    $scope.postResource.remove();
    return $location.path("/");
  };
  $scope.editorInit = function() {
    var languageOverrides;
    return languageOverrides = {
      js: 'javascript',
      html: 'xml'
    };
  };
  $scope.renderHtml = function() {
    $scope.renderPreview = $scope.md.render($scope.editorContent);
    return $scope.html = $sce.trustAsHtml($scope.renderPreview);
  };
  $scope.$watch("editorContent", function() {
    return $scope.renderHtml();
  });
  $scope.md = markdownit({
    html: true,
    highlight: function(code, lang) {
      var e;
      if (languageOverrides[lang]) {
        lang = languageOverrides[lang];
      }
      if (lang && hljs.getLanguage(lang)) {
        try {
          return hljs.highlight(lang, code).value;
        } catch (error) {
          e = error;
          console.log("Some error");
        }
      }
      return '';
    }
  }).use(markdownitFootnote);
  return $scope.editorInit();
});
